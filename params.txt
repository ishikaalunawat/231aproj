    parser.add_argument('--no-cuda', action='store_true', default=False, help='disables CUDA training')
    parser.add_argument('--patch-size', type=int, default=16, help='patch size for images (default : 16)')
    parser.add_argument('--latent-size', type=int, default=256, help='latent size (default : 256)')
    parser.add_argument('--n-channels', type=int, default=3, help='number of channels in images (default : 3 for RGB)')
    parser.add_argument('--num-heads', type=int, default=12, help='(default : 12)')
    parser.add_argument('--num-encoders', type=int, default=12, help='number of encoders (default : 12)')
    parser.add_argument('--dropout', type=float, default=0.1, help='dropout value (default : 0.1)')
    parser.add_argument('--img-size', type=int, default=224, help='image size to be reshaped to (default : 224)')
    parser.add_argument('--batch-size', type=int, default=4, help='batch size (default : 4)')
    parser.add_argument('--epochs', type=int, default=10, help='number of epochs (default : 10)')
    parser.add_argument('--lr', type=float, default=1e-2, help='base learning rate (default : 0.01)')
    parser.add_argument('--weight-decay', type=float, default=3e-2, help='weight decay value (default : 0.03)')
    parser.add_argument('--dry-run', action='store_true', default=False, help='quickly check a single pass')

patch_size = 16
latent_size = 256
n_channels = 3
num_heads = 12
num_encoders = 12
dropout = 0.1

